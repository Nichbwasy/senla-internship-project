spring.data.mongodb.authentication-database=${AUTHENTICATION_DATABASE:admin}
spring.data.mongodb.username=${DATABASE_USERNAME:root}
spring.data.mongodb.password=${DATABASE_PASSWORD:root}
spring.data.mongodb.database=${DATABASE_NAME:payment}
spring.data.mongodb.port=${DATABASE_PORT:27017}
spring.data.mongodb.host=${DATABASE_HOST:localhost}

kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVICES:localhost:9092}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVICES:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=${PAYMENT_TOPIC_GROUP_ID:payment_topic_group}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=manual

kafka.listener.payment.request.topic.name=${KAFKA_PAYMENT_REQUEST_TOPIC_NAME:payment_request_topic}

server.port=8084

car.rental.user.receipts.page.size=${USER_RECEIPTS_PAGE_SIZE:5}
payment.requests.page.size=${PAYMENT_REQUESTS_PAGE_SIZE:5}