spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=root
spring.data.mongodb.password=root
spring.data.mongodb.database=payment
spring.data.mongodb.port=27017
spring.data.mongodb.host=localhost

kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVICES:localhost:9092}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVICES:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=${PAYMENT_TOPIC_GROUP_ID:payment_topic_group}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=manual

kafka.listener.payment.request.topic.name=payment_request_topic

server.port=8084

microservice.name=${MICROSERVICE_NAME:RENTAL_MICROSERVICE}
authorization.microservice.url=${AUTHORIZATION_MICROSERVICE_URL:http://localhost:8081}
car.microservice.url=${CAR_MICROSERVICE_URL:http://localhost:8082/car-run}
rental.microservice.url=${CAR_MICROSERVICE_URL:http://localhost:8083}

spring.senla.jwt.utils.access-token-secret=qBTmv4oXFFR2GwjexDJ4t6fsIUIUhhXqlktXjXdkcyygs8nPVEwMfo29VDRRepYDVV5IkIxBMzr7OEHXEHd37w==
spring.senla.jwt.utils.refresh-token-secret=zL1HB3Pch05Avfynovxrf/kpF9O2m4NCWKJUjEp27s9J2jEG3ifiKCGylaZ8fDeoONSTJP/wAzKawB8F9rOMNg==

local.container.packages.scan=com.senla.payment

car.rental.user.receipts.page.size=${USER_RECEIPTS_PAGE_SIZE:5}
payment.requests.page.size=${PAYMENT_REQUESTS_PAGE_SIZE:5}